name:                workflow-windows
version:             0.0.0
synopsis:            Automate keyboard/mouse/clipboard/application interaction.
description:         see <http://github.com/sboosali/workflow-windows#readme> for
                     documentation and examples.
homepage:            http://github.com/sboosali/workflow-windows#readme
license:             BSD3
license-file:        LICENSE
author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
copyright:           2016 Spiros Boosalis
category:            Development
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/sboosali/workflow-windows


library
 if !os(windows)
    buildable: False

 hs-source-dirs:      sources
 default-language:    Haskell2010
 ghc-options:         -Wall
 default-extensions:  LambdaCase, DeriveDataTypeable, DeriveGeneric

 c-sources:        native/Workflow.c
                   sources/Workflow/Windows/Bindings.c
                   -- for inline-c  
 includes:         native/Workflow.h, native/calling_convention.h
 install-includes: native/Workflow.h, native/calling_convention.h
 include-dirs:     native

 exposed-modules:
  Workflow.Windows
  Workflow.Windows.Types
  Workflow.Windows.Constants
  Workflow.Windows.Foreign
  Workflow.Windows.Bindings
  Workflow.Windows.Execute
  Workflow.Windows.Variables

-- other-modules:
  Workflow.Windows.Example
  Workflow.Windows.Extra

 build-depends:
    base >=4.7 && <5
  , transformers

  , spiros

  -- TODO other package?
  , workflow-types
  , free

  -- minimal dependencies
  , c-storable-deriving
  , inline-c
  -- cabal repl is not supported, because the C code is not compiled and linked appropriately.

  , StateVar
  , data-default-class

-- $ stack build && stack exec -- example-workflow-windows
executable example-workflow-windows
 hs-source-dirs:      executables
 main-is:             Main.hs
 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base >=4.7 && <5
  , workflow-windows


-- $ stack test doctest
test-suite doctest
 hs-source-dirs:      tests
 main-is:             DocTest.hs
 type:                exitcode-stdio-1.0
 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base >=4.7 && <5
  , workflow-windows
  , doctest ==0.10.*

-- $ stack test unittest
test-suite unittest
 hs-source-dirs:      tests
 main-is:             UnitTest.hs
 type:                exitcode-stdio-1.0
 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
  Workflow.Test

 build-depends:
    base >=4.7 && <5
  , workflow-windows
  , hspec ==2.2.*
  , QuickCheck ==2.8.*
